- hosts: localhost

  tasks:
  #- include: tasks/tightvnc.yml
#Tarefa fixa para instalar tighvncserver se não estiver instalado.
  #- include: tasks/python.yml
  - name: Copiando update.desktop para o Desktop
    copy:
       src: files/update.desktop
       dest: "/home/pi/Área de Trabalho/"
       owner: pi
       group: pi
       attributes: +i
       mode: 0755
  - name: Copiando demais atalhos para a Área de Trabalho
    copy:
       src: files/desktop/
       dest: "/home/pi/Área de Trabalho"
       owner: pi
       group: pi
       attributes: +i
       mode: 0755
  - name: Copiando arquivos de imagens
    copy:
       src: files/icons
       dest: /usr/share
       mode: 0777
  - name: Copiando programas executáveis
    copy:
       src: files/programs
       dest: /home/mindmakers
       mode: 0755
  - name: Copiando arquivo de inicialização do mqtt
    copy:
       src: files/mqtt/rc.local
       dest: /etc
       mode: 0755
  - name: systemctl daemon-reload
    command: sudo systemctl daemon-reload
  - name: systemctl stop rc-local.service
    command: sudo systemctl stop rc-local.service
  - name: Copiando arquivo de inicialização do mqtt
    copy:
       src: files/mqtt/mqttbot
       dest: /etc/init.d
       mode: 0755
  - name: Configurando mqttbot
    shell: 'sudo update-rc.d mqttbot defaults'
  - name: Copiando o atalho notas de liberacão para a Área de Trabalho
    copy:
       src: releasenotes.desktop
       dest: "/home/pi/Área de Trabalho"
       owner: pi
       group: pi
       attributes: +i
       mode: 0755
  - name: Copiando o arquivo com as notas de liberação da versão para o disco
    copy:
       src: releasenotes.info
       dest: /home/mindmakers
       mode: 0755
  - name: Instalando vnstat
    apt:
       name: vnstat
  - name: Instalando android-tools
    apt:
       name: android-tools-adb
  - name: Instalando fbi
    apt:
       name: fbi
  - name: Copiando arquivo 50-microbit.rules
    copy:
       src: files/rules.d
       dest: /etc/udev
       mode: 0755
  - name: Ativando 50-microbit.rules
    shell: 'sudo udevadm control --reload-rules'
  - name: Instalando gnuplot
    apt:
       name: gnuplot
    #when: not dpkg_check.stdout.find('gnuplot') != -1
  - name: Instalando screen
    apt:
       name: screen
    #when: not dpkg_check.stdout.find('screen') != -1
  - name: Verificando se aiStarter já existe
    stat:
       path: /home/mindmakers/programs/verify/aiStarter/appinventor2-setup_2.3_all.deb
    register: aiStarter
  - file:
      path: /home/mindmakers/programs/verify/aiStarter
      state: directory
      mode: 0755
  - name: Baixando arquivo de instalação aiStarter -- Este passo pode demorar --
    get_url:
      url: http://appinv.us/aisetup_linux_deb
      dest: /home/mindmakers/programs/verify/aiStarter
      timeout: 60
      mode: 0744
    #when: not aiStarter.stat.exists
  - name: Instalando aiStarted do pacote .deb
    apt:
      deb: /home/mindmakers/programs/verify/aiStarter/appinventor2-setup_2.3_all.deb
    #when: not aiStarter.stat.exists
  - name: Copiando programas executáveis aiStarter
    copy:
       src: files/appinventor/usr
       dest: /
       mode: 0755
  - file:
      path: /usr/google/appinventor/commands-for-Appinventor/adb
      state: absent
  - shell: 'sudo ln -v -s /usr/bin/adb /usr/google/appinventor/commands-for-Appinventor/adb'
  # - name: Verificando OS em inglês
  #   shell: 'cat /etc/default/locale | grep LANG= '
  #   register: lang
  # - file:
  #     path: /home/pi/Desktop/scratch2_folder.desktop
  #     state: touch
  #     attributes: -i
  #   when: lang.stdout.find('LANG=en') != -1
  # - name: Alterando atalho da pasta Scratch2
  #   lineinfile:
  #     path: /home/pi/Desktop/scratch2_folder.desktop
  #     regexp: '^Exec=pcmanfm /home/mindmakers/Scratch2/portuguese'
  #     line: 'Exec=pcmanfm /home/mindmakers/Scratch2/english'
  #     backrefs: yes
  #   when: lang.stdout.find('LANG=en') != -1
# - file:
#     path: /home/pi/Desktop/scratch2_folder.desktop
#     state: touch
#     attributes: +i
  # - file:
  #     path: /home/pi/Scratch2
  #     state: absent
  # - shell: 'sudo ln -s /home/mindmakers/Scratch2/english /home/pi/Scratch2'
  #   when: lang.stdout.find('LANG=en') != -1
  # - shell: 'sudo ln -s /home/mindmakers/Scratch2/portuguese /home/pi/Scratch2'
  #   when: lang.stdout.find('LANG=pt') != -1

  # - name: Copiando arquivo de inicialização do mqtt
  #   copy:
  #      src: files/mqtt/rc.local
  #      dest: /etc
  #      mode: 0755
  # - name: systemctl daemon-reload
  #   command: sudo systemctl daemon-reload
  # # - name: systemctl start rc-local.service
  # #   command: sudo systemctl start rc-local.service
  # - name: systemctl stop rc-local.service
  #   command: sudo systemctl stop rc-local.service
  # - name: systemctl stop rc-local.service
  #   command: sudo systemctl stop rc-local.service
  # - name: Copiando arquivo de inicialização do mqtt
  #   copy:
  #      src: files/mqtt/mqttbot2
  #      dest: /etc/init.d/mqttbot
  #      mode: 0755
  # - name: Configurando mqttbot
  #   shell: 'sudo update-rc.d mqttbot defaults'

#Download a instalação dos arquivos para o aiStarter
  # - name: Verifica Versao npm
  #   command: nodejs --version
  #   register: node_output
  # - debug:
  #      var: node_output
  # - name: Instalando Nodejs 8.15*
  #   apt:
  #      name: nodejs=8.15*
  #      #force_apt_get: yes
  #   when: node_output.stdout is version('8.12.0', '<')


  # - command: dpkg-query -l
  #   register: dpkg_check
  # - debug:
  #     var: dpkg_check
  # - debug:
  #     var: not dpkg_check.stdout.find('alkshdfalskdjfhalskjfdhs') != -1
  # - name: Instalando gnuplot
  #   apt:
  #      name: gnuplot
  #   when: not dpkg_check.stdout.find('gnuplot') != -1
  # - name: Instalando screen
  #   apt:
  #      name: screen
  #   when: not dpkg_check.stdout.find('screen') != -1

#  - command: pip list
#    register: pip_check
#  - name: Instalando paho-mqtt
#    pip:
 #      name: paho-mqtt
 #   when: not pip_check.stdout.find('paho-mqtt') != -1
 # - name: Instalando pip keyboard
 #   pip:
 #      name: keyboard
 #   when: not pip_check.stdout.find('keyboard') != -1
 # - name: Instalando pip logging
 #   pip:
 #      name: logging
 #   when: not pip_check.stdout.find('logging') != -1
 # - debug:
 #     var: not pip_check.stdout.find('alkshdfalskdjfhalskjfdhs') != -1


#  - name: Instalando npm 1.4* se o pacote não estiver instalado
#    apt:
#       name: npm
#    when: deb_check_npm is failed


#  - name: Escondendo Python-games
#    lineinfile:
#      path: /usr/share/applications/python-games.desktop
#      regexp: 'NoDisplay=true'
#      line: 'NoDisplay=true'
#      insertafter: EOF
#  - name: Escondendo Minecraft
#    lineinfile:
#      path: /usr/share/raspi-ui-overrides/applications/minecraft-pi.desktop
#      regexp: 'NoDisplay=true'
#      line: 'NoDisplay=true'
#      insertafter: EOF

#  - name: Verifica Versao npm
#    command: nodejs --version
#    register: node_output
#  - debug:
#       var: node_output
#  - name: Instalando Nodejs 8.15.1
#    apt:
#       name: nodejs
       #force_apt_get: yes
#    when: node_output.stdout is version('8.12.0', '<')


#Funcionando mas precisa validar quais comandos realmente pode fazer sem o sudo.
#força pedir senha apra usar comando sudo para usuários pi.
#  - lineinfile:
#      path: /etc/sudoers.d/010_pi-nopasswd
#      regexp: '^pi ALL='
#      line: 'pi ALL=(ALL) ALL'
#      backrefs: yes
############

#############
#  - name: Verifica Versao tightvnc
#    command: Xvnc -version
#    ignore_errors: yes
#    register: vnc_output
#  - debug:
#      var: vnc_output
#  - include: tasks/tightvnc.yml
#    when: not vnc_output.stderr is search("Xvnc version TightVNC-*")
############


#Funciona para verificar versão de pacotes instalados

#  - name: Check if foo is installed
#    command: dpkg-query -l tightvncserver
#    register: deb_check
#  - debug:
#       var: deb_check
#  - include: tasks/tightvnc.yml
#    when: deb_check.stdout.find('<nenhuma>') != -1

######

  # Verifica se school.info ainda tem Pi não registrado para. true se não tiver e false se tiver.

#  - name: instalar ...
#    include: tasks/headless.yml


#verificação de versão funcionando!!
#  - name: Check if npm is installed
#    command: dpkg-query -l npm
#    register: deb_check_npm
#  - debug:
#       var: deb_check_npm
#  - debug:
#       mgs: fez o treco
#    when: deb_check_npm.stdout.find('<nenhuma>') != -1
#  - name: Verifica Versao npm
#    command: 'npm ls --depth 0'
#    args:
#       chdir: /home/mindmakers/programs/
#    register: npm_dep_output
#    ignore_errors: yes
#  - debug:
#       var: npm_dep_output

 # - name: Instalando Nodejs 8.15.3
 #   apt:
 #     name: nodejs
 #   force_apt_get: yes
 #   when: npm_output.stdout is version('8.15.0', '<')

#  - name: Atualiza o npm se versão < 6.9
#    npm: name={{item}} global=yes
#    with_items:
#      - npm
#      - npm
#    when: npm_output is version('6.0', '>=')

#  - name: Verifica Versao npm
#    command: nodejs --version
#    register: shell_output
#  - debug:
#       var: shell_output
#  - debug:
#       msg: versao superior precisa ser instalada
#    when: shell_output.stdout is version('8.13*', '<=')

#precisa de ignorar o resultado para continuar rodando o playbook
#  - name: Ativa vnstat
#    command: lxterminal -e vnstat -l -i wlan0
#    changed_when: False
#    failed_when: False
#    when: ansible_facts.wlan0.active
#  - name: Ativa vnstat
#    command: lxterminal -e vnstat -l
#    when: ansible_facts.ansible_eth0.active
  # - file:
   #    path: /home/pi/.config/pcmanfm/LXDE-pi/desktop-items-0.conf
  #     state: touch
 #      attributes: -i
 #  - name: Trocando imagem de fundo e posicionando ícones padrões do Desktop
 #    copy:
#        src: files/pcmanfm/LXDE-pi/desktop-items-0.conf
#        dest: /home/pi/.config/pcmanfm/LXDE-pi
#        mode: 0755
#   - name: Verificando OS em inglês
#     shell: 'cat /etc/default/locale | grep LANG= '
#     register: lang
#   - name: Alterando fundo.png para fundo-en.png
#     lineinfile:
#       path: /home/pi/.config/pcmanfm/LXDE-pi/desktop-items-0.conf
#       regexp: '^wallpaper=/home/mindmakers/fundo.png'
#       line: 'wallpaper=/home/mindmakers/fundo-en.png'
#       backrefs: yes
#     when: lang.stdout.find('LANG=en') != -1
#   - file:
#       path: /home/pi/.config/pcmanfm/LXDE-pi/desktop-items-0.conf
#       state: touch
#       attributes: +i


##########
# Verifica se school.info ainda tem Pi não registrado para. true se não tiver e false se tiver.
#  - name: Ver se máquina já foi ativada para fixar o ip do Rapsberry.
#    find:
#      paths: /home/mindmakers/
#      patterns: 'school.info'
#      contains: 'Pi: Não'
#      use_regex: yes
#    register: semregistro2
#  - name: Ver se máquina já foi ativada para fixar o ip do Rapsberry.
#    find:
#      paths: /home/mindmakers/
#      patterns: 'school.info'
#      contains: 'Pi: Não'
#      use_regex: yes
#    register: semregistro2

#  - debug:
#       var: semregistro2
#    when: semregistro.matched == 0
##########

#  - debug:
#       var: ansible_facts
#  - debug:
#       var: ansible_facts['os_family']
#  - debug:
#       var: ansible_facts.lsb
